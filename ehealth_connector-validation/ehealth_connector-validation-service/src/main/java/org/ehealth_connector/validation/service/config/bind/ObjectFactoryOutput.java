/*
 *
 * The authorship of this project and accompanying materials is held by medshare GmbH, Switzerland.
 * All rights reserved. https://medshare.net
 *
 * Source code, documentation and other resources have been contributed by various people.
 * Project Team: https://sourceforge.net/p/ehealthconnector/wiki/Team/
 * For exact developer information, please refer to the commit history of the forge.
 *
 * This code is made available under the terms of the Eclipse Public License v1.0.
 *
 * Accompanying materials are made available under the terms of the Creative Commons
 * Attribution-ShareAlike 4.0 License.
 *
 * This line is intended for UTF-8 encoding checks, do not modify/delete: äöüéè
 *
 */
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2016.03.23 at 04:54:51 PM CET
//

package org.ehealth_connector.validation.service.config.bind;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the
 * ehealth_connector.validation.service.config.bind package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactoryOutput {

	private final static QName _SchematronOutputFailedAssertText_QNAME = new QName(
			"http://purl.oclc.org/dsdl/svrl", "text");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of
	 * schema derived classes for package:
	 * ehealth_connector.validation.service.config.bind
	 *
	 */
	public ObjectFactoryOutput() {
	}

	/**
	 * Create an instance of {@link SchematronOutput }
	 *
	 */
	public SchematronOutput createSchematronOutput() {
		return new SchematronOutput();
	}

	/**
	 * Create an instance of {@link SchematronOutput.ActivePattern }
	 *
	 */
	public SchematronOutput.ActivePattern createSchematronOutputActivePattern() {
		return new SchematronOutput.ActivePattern();
	}

	/**
	 * Create an instance of {@link SchematronOutput.FailedAssert }
	 *
	 */
	public SchematronOutput.FailedAssert createSchematronOutputFailedAssert() {
		return new SchematronOutput.FailedAssert();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link String }
	 * {@code >}}
	 *
	 */
	@XmlElementDecl(namespace = "http://purl.oclc.org/dsdl/svrl", name = "text", scope = SchematronOutput.FailedAssert.class)
	public JAXBElement<String> createSchematronOutputFailedAssertText(String value) {
		return new JAXBElement<String>(_SchematronOutputFailedAssertText_QNAME, String.class,
				SchematronOutput.FailedAssert.class, value);
	}

	/**
	 * Create an instance of {@link SchematronOutput.FiredRule }
	 *
	 */
	public SchematronOutput.FiredRule createSchematronOutputFiredRule() {
		return new SchematronOutput.FiredRule();
	}

	/**
	 * Create an instance of {@link SchematronOutput.NsPrefixInAttributeValues }
	 *
	 */
	public SchematronOutput.NsPrefixInAttributeValues createSchematronOutputNsPrefixInAttributeValues() {
		return new SchematronOutput.NsPrefixInAttributeValues();
	}

}
